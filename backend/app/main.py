# üìÇ backend/app/main.py ‚Äî –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞ FastAPI + Telegram Webhook

import os
import logging
from fastapi import FastAPI, Request
from fastapi.responses import JSONResponse
from fastapi.middleware.cors import CORSMiddleware

from .config import get_settings
from .user_routes import router as user_router
from .admin_routes import router as admin_router
from .bot import telegram_webhook_handler

# -----------------------------------------------------------------------------
# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
# -----------------------------------------------------------------------------
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger("efhc")

# -----------------------------------------------------------------------------
# –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
# -----------------------------------------------------------------------------
settings = get_settings()

# -----------------------------------------------------------------------------
# –°–æ–∑–¥–∞—ë–º FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
# -----------------------------------------------------------------------------
app = FastAPI(
    title=settings.PROJECT_NAME,
    version="1.0.0",
    description="EFHC Bot Backend (FastAPI + Telegram Webhook + Admin API)"
)

# -----------------------------------------------------------------------------
# CORS ‚Äî —Ä–∞–∑—Ä–µ—à–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É (Vercel) –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ API
# -----------------------------------------------------------------------------
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –ª—É—á—à–µ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –Ω–∞ –¥–æ–º–µ–Ω Vercel
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# -----------------------------------------------------------------------------
# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç—ã (API –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∞–¥–º–∏–Ω–æ–≤)
# -----------------------------------------------------------------------------
app.include_router(user_router, prefix=f"{settings.API_V1_STR}/users", tags=["users"])
app.include_router(admin_router, prefix=f"{settings.API_V1_STR}/admin", tags=["admin"])

# -----------------------------------------------------------------------------
# Telegram webhook
# -----------------------------------------------------------------------------
@app.post("/tg/webhook")
async def telegram_webhook(request: Request):
    """
    –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–ø–¥–µ–π—Ç–æ–≤ –æ—Ç Telegram.
    –í settings.TELEGRAM_BOT_TOKEN —É–∂–µ —É–∫–∞–∑–∞–Ω —Ç–æ–∫–µ–Ω, –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏–¥—ë—Ç –≤ bot.py.
    """
    try:
        data = await request.json()
        logger.info(f"[Telegram] Update: {data}")
        await telegram_webhook_handler(data)
        return JSONResponse({"ok": True})
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ webhook: {e}", exc_info=True)
        return JSONResponse({"ok": False, "error": str(e)})

# -----------------------------------------------------------------------------
# –ö–æ—Ä–Ω–µ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (healthcheck)
# -----------------------------------------------------------------------------
@app.get("/")
async def root():
    return {"status": "EFHC Bot Backend is running"}
