# üìÇ backend/app/main.py
# -----------------------------------------------------------------------------
# –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ EFHC Bot
# -----------------------------------------------------------------------------
# –ß—Ç–æ –¥–µ–ª–∞–µ—Ç:
# 1. –°–æ–∑–¥–∞—ë—Ç FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (API backend).
# 2. –ü–æ–¥–∫–ª—é—á–∞–µ—Ç –≤—Å–µ —Ä–æ—É—Ç—ã (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏ –∞–¥–º–∏–Ω—Å–∫–∏–µ).
# 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö (Neon PostgreSQL).
# 4. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç CORS (—á—Ç–æ–±—ã —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–∞ Vercel –º–æ–≥ –æ–±—â–∞—Ç—å—Å—è —Å API).
# 5. –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ (–µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏: –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –∫–í—Ç, –ø—Ä–æ–≤–µ—Ä–∫–∞ VIP NFT).
# 6. –ü–æ–¥–Ω–∏–º–∞–µ—Ç Telegram-–±–æ—Ç–∞ (–ª–∏–±–æ webhook, –ª–∏–±–æ polling).
#
# -----------------------------------------------------------------------------
# –°–≤—è–∑–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:
# - config.py        ‚Üí –∫–æ–Ω—Ñ–∏–≥–∏ –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
# - database.py      ‚Üí –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL (async SQLAlchemy)
# - models.py        ‚Üí –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –∏ ORM-–º–æ–¥–µ–ª–∏
# - user_routes.py   ‚Üí —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
# - admin_routes.py  ‚Üí —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
# - scheduler.py     ‚Üí cron-–∑–∞–¥–∞—á–∏ (–µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è, NFT-—á–µ–∫–µ—Ä)
# - bot.py           ‚Üí Telegram –±–æ—Ç (–º–µ–Ω—é, –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥)
# -----------------------------------------------------------------------------

import uvicorn
from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware

from .config import get_settings
from .database import init_db
from .user_routes import router as user_router
from .admin_routes import router as admin_router
from .scheduler import init_scheduler
from .bot import start_bot

settings = get_settings()


# -----------------------------------------------------------------------------
# –°–æ–∑–¥–∞–Ω–∏–µ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
# -----------------------------------------------------------------------------
def create_app() -> FastAPI:
    app = FastAPI(
        title=settings.PROJECT_NAME,
        version="1.0.0",
        description="EFHC Bot Backend API (FastAPI + Neon + Telegram Bot)"
    )

    # -------------------
    # CORS
    # -------------------
    # –ß—Ç–æ–±—ã —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–∞ Vercel –º–æ–≥ –æ–±—â–∞—Ç—å—Å—è —Å –Ω–∞—à–∏–º API
    app.add_middleware(
        CORSMiddleware,
        allow_origins=settings.BACKEND_CORS_ORIGINS or ["*"],
        allow_credentials=True,
        allow_methods=["*"],
        allow_headers=["*"],
    )

    # -------------------
    # –†–æ—É—Ç—ã
    # -------------------
    app.include_router(user_router, prefix=settings.API_V1_STR, tags=["user"])
    app.include_router(admin_router, prefix=settings.API_V1_STR, tags=["admin"])

    return app


app = create_app()


# -----------------------------------------------------------------------------
# Startup / Shutdown events
# -----------------------------------------------------------------------------
@app.on_event("startup")
async def on_startup():
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º –ë–î
    await init_db()

    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á (cron)
    init_scheduler(app)

    # –ó–∞–ø—É—Å–∫–∞–µ–º Telegram-–±–æ—Ç–∞
    await start_bot()


@app.on_event("shutdown")
async def on_shutdown():
    print("[EFHC] Shutdown complete")


# -----------------------------------------------------------------------------
# –õ–æ–∫–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ (uvicorn)
# -----------------------------------------------------------------------------
# –í production (Vercel/Render) –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è WSGI/ASGI-–∞–¥–∞–ø—Ç–µ—Ä,
# –∞ –ª–æ–∫–∞–ª—å–Ω–æ –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –Ω–∞–ø—Ä—è–º—É—é: python -m backend.app.main
# -----------------------------------------------------------------------------
if __name__ == "__main__":
    uvicorn.run("backend.app.main:app", host="0.0.0.0", port=8000, reload=True)

