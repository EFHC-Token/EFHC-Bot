# üìÇ backend/app/models.py ‚Äî SQLAlchemy ORM-–º–æ–¥–µ–ª–∏ (–ü–û–õ–ù–ê–Ø –í–ï–†–°–ò–Ø)
# -----------------------------------------------------------------------------
# –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:
#   ‚Ä¢ –ï–¥–∏–Ω—ã–π –Ω–∞–±–æ—Ä ORM-–º–æ–¥–µ–ª–µ–π –¥–ª—è —è–¥—Ä–∞ EFHC-–ø—Ä–æ–µ–∫—Ç–∞ (—Å—Ö–µ–º–∞ efhc_core –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é).
#   ‚Ä¢ –¢–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –±–∞–ª–∞–Ω—Å–æ–≤, –ø–∞–Ω–µ–ª–µ–π, —Å—Ç–∞—Ç—É—Å–∞ VIP (NFT), –ª–æ–≥–æ–≤ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ EFHC,
#     –∑–∞–∫–∞–∑–æ–≤ –º–∞–≥–∞–∑–∏–Ω–∞ (Shop), –∑–∞—è–≤–æ–∫ –Ω–∞ –≤—ã–¥–∞—á—É NFT, –∑–∞—è–≤–æ–∫ –Ω–∞ –≤—ã–≤–æ–¥, —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Å–≤—è–∑–µ–π/–±–æ–Ω—É—Å–æ–≤,
#     –∏—Å—Ç–æ—Ä–∏–∏/–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–∞–Ω–∫–∞ (–∞–¥–º–∏–Ω-—Å—á—ë—Ç) –∏ –∏—Å—Ç–æ—Ä–∏–∏ —Å—Ç–∞–≤–æ–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ kWh.
#
# –ë–∏–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª–∞ (—Ä–µ–∑—é–º–µ –∏–∑ –ø–µ—Ä–µ–ø–∏—Å–∫–∏):
#   ‚Ä¢ 1 EFHC = 1 kWh. EFHC –∏ kWh ‚Äî –æ–±–∞ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ NUMERIC(30, 8) (8 –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ —Ç–æ—á–∫–∏).
#   ‚Ä¢ –ë–æ–Ω—É—Å VIP/NFT = +7% ‚Üí —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ –ø–æ–≤—ã—à–µ–Ω–Ω—É—é —Å—Ç–∞–≤–∫—É kWh/—Å—É—Ç–∫–∏ (0.640) vs –æ–±—ã—á–Ω–∞—è (0.598).
#     –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å—Ç–∞–≤–∫–∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—é—Ç—Å—è –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –∏ –≤—Å—Ç—É–ø–∞—é—Ç –≤ —Å–∏–ª—É –≤ 01:00 —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è.
#   ‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è kWh ‚Äî ¬´–ª–µ–Ω–∏–≤–∞—è¬ª: –≤ balances.last_generated_at –∑–∞–ø–æ–º–∏–Ω–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∞–ø–¥–µ–π—Ç, –ø—Ä–∏
#     –ª—é–±–æ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏ —Å—á–∏—Ç–∞–µ–º ‚àÜt * (—Å—Ç–∞–≤–∫–∞/86400) * –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–∞–Ω–µ–ª–∏. –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
#     –ø–µ—Ä–≤–æ–π –ø–∞–Ω–µ–ª–∏ (–≤ shop_routes –º—ã —Å—Ç–∞–≤–∏–º last_generated_at=NOW()).
#   ‚Ä¢ –ë–∞–ª–∞–Ω—Å—ã:
#       - balances.efhc ‚Äî —Ç–µ–∫—É—â–∏–π EFHC (NUMERIC(30,8)).
#       - balances.bonus_efhc ‚Äî –±–æ–Ω—É—Å–Ω—ã–µ EFHC (NUMERIC(30,8)), —Ç—Ä–∞—Ç—è—Ç—Å—è –¢–û–õ–¨–ö–û –Ω–∞ –ø–∞–Ω–µ–ª–∏.
#         –ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –ø–∞–Ω–µ–ª–µ–π –±–æ–Ω—É—Å–Ω—ã–µ EFHC —Å–ø–∏—Å—ã–≤–∞—é—Ç—Å—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è
#         –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –∞–¥–º–∏–Ω—Å–∫–∏–π —Å—á—ë—Ç (–±–∞–Ω–∫ EFHC). –û–±—â–µ–≥–æ ¬´–±–æ–Ω—É—Å–Ω–æ–≥–æ¬ª —Å—á—ë—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.
#       - balances.kwh ‚Äî ¬´–¥–æ—Å—Ç—É–ø–Ω—ã–µ¬ª kWh (NUMERIC(30,8)) ‚Äî —Ä–∞—Å—Ç—É—Ç –ª–µ–Ω–∏–≤–æ.
#       - balances.last_generated_at ‚Äî –æ—Ç–º–µ—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –ª–µ–Ω–∏–≤–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.
#   ‚Ä¢ –ë–∞–Ω–∫ EFHC (–∞–¥–º–∏–Ω-—Å—á—ë—Ç): telegram_id —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ —Ç–∞–±–ª–∏—Ü–µ AdminBankConfig –∏ –º–æ–∂–µ—Ç –º–∏–≥—Ä–∏—Ä–æ–≤–∞—Ç—å.
#     –í—Å–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è/—Å–ø–∏—Å–∞–Ω–∏—è EFHC –¥–æ–ª–∂–Ω—ã –∏–¥—Ç–∏ —á–µ—Ä–µ–∑ efhc_transactions (—Å –ª–æ–≥–æ–º EFHCTransfersLog).
#   ‚Ä¢ VIP-—Å—Ç–∞—Ç—É—Å –≤–∫–ª—é—á–∞–µ—Ç—Å—è/–≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –ø–æ—Å–ª–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è NFT –Ω–∞ –∫–æ—à–µ–ª—å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
#     –ü–æ–∫—É–ø–∫–∞ VIP NFT –≤ Shop —Å–æ–∑–¥–∞—ë—Ç –∑–∞—è–≤–∫—É (manual_nft_requests), VIP –ù–ï –≤–∫–ª—é—á–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
#   ‚Ä¢ –ü–∞–Ω–µ–ª–∏: —Å—Ä–æ–∫ –∂–∏–∑–Ω–∏ = 180 –¥–Ω–µ–π. –ü–æ–∫—É–ø–∫–∞ –∑–∞ EFHC/bonus_EFHC. –ù–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ ‚â§ 1000 –∞–∫—Ç–∏–≤–Ω—ã—Ö.
#   ‚Ä¢ –í—ã–≤–æ–¥ EFHC: –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ —Å–ø–∏—Å—ã–≤–∞—é—Ç—Å—è user ‚Üí –±–∞–Ω–∫ (–±–ª–æ–∫–∏—Ä—É—é—Ç—Å—è), –¥–∞–ª–µ–µ –∞–¥–º–∏–Ω –æ–¥–æ–±—Ä—è–µ—Ç/–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç.
#   ‚Ä¢ –†–µ—Ñ–µ—Ä–∞–ª—ã: –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π –±–æ–Ω—É—Å –∑–∞ ¬´–∞–∫—Ç–∏–≤–Ω–æ–≥–æ¬ª —Ä–µ—Ñ–µ—Ä–∞–ª–∞ (–ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ 1 –ø–∞–Ω–µ–ª–∏), –∏ –Ω–∞–≥—Ä–∞–¥—ã –ø–æ —à–∫–∞–ª–µ
#     (10/100/1000/3000/10000 –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤). –ë–æ–Ω—É—Å—ã –∏–¥—É—Ç –≤ bonus_efhc.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏—è:
#   ‚Ä¢ –ó–¥–µ—Å—å –º—ã –æ–ø–∏—Å—ã–≤–∞–µ–º –º–æ–¥–µ–ª–∏ –¥–ª—è ORM. –°–æ–∑–¥–∞–Ω–∏–µ/–º–∏–≥—Ä–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è —á–µ—Ä–µ–∑ Alembic.
#   ‚Ä¢ –í–æ –≤—Å–µ—Ö –º–µ—Å—Ç–∞—Ö, –≥–¥–µ —Ñ–∏–≥—É—Ä–∏—Ä—É—é—Ç —Å—É–º–º—ã EFHC/kWh ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º Decimal(30,8)-—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–µ —Å—Ç—Ä–æ–∫–∏/Decimal.
#   ‚Ä¢ –í–Ω–µ—à–Ω–∏–µ —Ä—É—á–∫–∏ (shop_routes, withdraw_routes –∏ —Ç.–ø.) –∏—Å–ø–æ–ª—å–∑—É—é—Ç RAW SQL / ORM ‚Äî —Å–æ–≤–º–µ—Å—Ç–∏–º–æ.
# -----------------------------------------------------------------------------

from __future__ import annotations

from datetime import datetime, date
from typing import Optional

from sqlalchemy import (
    Column,
    BigInteger,
    Integer,
    String,
    Text,
    Boolean,
    DateTime,
    ForeignKey,
    UniqueConstraint,
    Index,
    Numeric,
)
from sqlalchemy.dialects.postgresql import JSONB
from sqlalchemy.orm import declarative_base, relationship

from .config import get_settings

# -----------------------------------------------------------------------------
# –û–±—â–∞—è –±–∞–∑–∞ ORM –∏ –∏–º—è —Å—Ö–µ–º—ã
# -----------------------------------------------------------------------------
Base = declarative_base()

# –ò–º—è —Å—Ö–µ–º—ã –±–µ—Ä—ë–º –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 'efhc_core')
settings = get_settings()
SCHEMA = getattr(settings, "DB_SCHEMA_CORE", "efhc_core")


# =============================================================================
# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏
# =============================================================================
class User(Base):
    """
    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã (Telegram-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å).

    –í–ê–ñ–ù–û: –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º Telegram ID –∫–∞–∫ –ø–µ—Ä–≤–∏—á–Ω—ã–π –∫–ª—é—á (PK). –≠—Ç–æ —É–ø—Ä–æ—â–∞–µ—Ç
    –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤–æ –≤—Å–µ—Ö —Ä—É—á–∫–∞—Ö (–≤ –ø—Ä–æ–µ–∫—Ç–µ –º—ã –ø–æ–≤—Å—é–¥—É –æ–ø–µ—Ä–∏—Ä—É–µ–º telegram_id).
    """
    __tablename__ = "users"
    __table_args__ = (
        {"schema": SCHEMA},
    )

    telegram_id = Column(BigInteger, primary_key=True)  # PK = Telegram ID
    username = Column(String(64), nullable=True)
    first_name = Column(String(128), nullable=True)
    last_name = Column(String(128), nullable=True)
    language_code = Column(String(10), nullable=True)
    created_at = Column(DateTime(timezone=True), nullable=False, default=datetime.utcnow)
    updated_at = Column(DateTime(timezone=True), nullable=False, default=datetime.utcnow)

    balance = relationship("Balance", back_populates="user", uselist=False)
    panels = relationship("Panel", back_populates="user")
    vip_status = relationship("VipStatus", back_populates="user", uselist=False)
    wallets = relationship("TonWallet", back_populates="user")


class TonWallet(Base):
    """
    TON-–∫–æ—à–µ–ª—å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
      - –•—Ä–∞–Ω–∏–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∞–¥—Ä–µ—Å–æ–≤ (–ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏), –Ω–æ –æ–±—ã—á–Ω–æ –æ–¥–∏–Ω ‚Äî current=TRUE.
      - 'verified' ‚Äî –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä–∏ —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–ª–∞–¥–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–æ–º.
    """
    __tablename__ = "ton_wallets"
    __table_args__ = (
        UniqueConstraint("telegram_id", "address", name="uq_ton_wallets_user_address"),
        {"schema": SCHEMA},
    )

    id = Column(BigInteger, primary_key=True, autoincrement=True)
    telegram_id = Column(BigInteger, ForeignKey(f"{SCHEMA}.users.telegram_id", ondelete="CASCADE"), nullable=False)
    address = Column(Text, nullable=False)
    current = Column(Boolean, nullable=False, default=True)
    verified = Column(Boolean, nullable=False, default=False)
    created_at = Column(DateTime(timezone=True), nullable=False, default=datetime.utcnow)

    user = relationship("User", back_populates="wallets")


class VipStatus(Base):
    """
    –°—Ç–∞—Ç—É—Å VIP (–ø–æ–ª—É—á–∞–µ—Ç—Å—è/—Ç–µ—Ä—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –ø—Ä–æ–≤–µ—Ä–∫–∏ NFT –≤ –∫–æ—à–µ–ª—å–∫–µ).
    –ù–∞–ª–∏—á–∏–µ –∑–∞–ø–∏—Å–∏ —Å has_nft=True –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å VIP (—Å—Ç–∞–≤–∫–∞ kWh –≤—ã—à–µ).

    –í–ê–ñ–ù–û: –ø–æ–∫—É–ø–∫–∞ VIP NFT –≤ –º–∞–≥–∞–∑–∏–Ω–µ –ù–ï –≤–∫–ª—é—á–∞–µ—Ç VIP –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏. –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —Å–æ–∑–¥–∞—ë—Ç—Å—è
    manual-–∑–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–¥–∞—á—É NFT, –∞ —Ä–µ–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å VIP –ø–æ—è–≤–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ
    –æ—á–µ—Ä–µ–¥–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ—à–µ–ª—å–∫–∞ (–µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 00:00, –∫–∞–∫ –æ–ø–∏—Å–∞–Ω–æ –≤ –¢–ó).
    """
    __tablename__ = "vip_status"
    __table_args__ = (
        {"schema": SCHEMA},
    )

    telegram_id = Column(BigInteger, ForeignKey(f"{SCHEMA}.users.telegram_id", ondelete="CASCADE"), primary_key=True)
    has_nft = Column(Boolean, nullable=False, default=False)         # True ‚Üí VIP-—Å—Ç–∞–≤–∫–∞
    source = Column(String(32), nullable=False, default="nft_presence")  # –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, promo)
    since = Column(DateTime(timezone=True), nullable=True)           # –∫–æ–≥–¥–∞ –≤–ø–µ—Ä–≤—ã–µ —Å—Ç–∞–ª VIP
    updated_at = Column(DateTime(timezone=True), nullable=False, default=datetime.utcnow)

    user = relationship("User", back_populates="vip_status")


class Balance(Base):
    """
    –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
      ‚Ä¢ efhc ‚Äî —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å EFHC (–≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –º–æ–Ω–µ—Ç–∞, 8 –∑–Ω–∞–∫–æ–≤).
      ‚Ä¢ bonus_efhc ‚Äî –±–æ–Ω—É—Å–Ω—ã–µ EFHC (—Ç—Ä–∞—Ç—è—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –ø–∞–Ω–µ–ª–∏).
         - –ë–æ–Ω—É—Å–Ω—ã–µ EFHC –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (user.balance.bonus_efhc += X).
         - –ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –ø–∞–Ω–µ–ª–µ–π –æ–Ω–∏ —Å–ø–∏—Å—ã–≤–∞—é—Ç—Å—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è,
           –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å—á—ë—Ç –±–∞–Ω–∫–∞ EFHC (AdminBankConfig.current_bank_telegram_id).
         - –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Ü–∏–∫–ª –±–æ–Ω—É—Å–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è –¥–æ –Ω–æ–≤–æ–≥–æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è.
         - –û–±—â–µ–≥–æ ¬´–±–æ–Ω—É—Å–Ω–æ–≥–æ —Å—á—ë—Ç–∞¬ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ‚Äî –±–æ–Ω—É—Å—ã –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∞ –ø—Ä–∏ —Ç—Ä–∞—Ç–µ
           —É—Ö–æ–¥—è—Ç –Ω–∞ –±–∞–Ω–∫ (–∫–∞–∫ –æ–±—ã—á–Ω—ã–µ EFHC).
      ‚Ä¢ kwh ‚Äî –¥–æ—Å—Ç—É–ø–Ω—ã–µ ¬´–∏–≥—Ä–æ–≤—ã–µ¬ª kWh (8 –∑–Ω–∞–∫–æ–≤), —Ä–∞—Å—Ç—É—Ç ¬´–ª–µ–Ω–∏–≤–æ¬ª (lazy accrual).
      ‚Ä¢ last_generated_at ‚Äî –º–æ–º–µ–Ω—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ñ–∏–∫—Å–∞—Ü–∏–∏ —Ä–æ—Å—Ç–∞ kWh –¥–ª—è –ª–µ–Ω–∏–≤–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.
    """
    __tablename__ = "balances"
    __table_args__ = (
        {"schema": SCHEMA},
    )

    telegram_id = Column(BigInteger, ForeignKey(f"{SCHEMA}.users.telegram_id", ondelete="CASCADE"), primary_key=True)
    efhc = Column(Numeric(30, 8), nullable=False, default=0)
    bonus_efhc = Column(Numeric(30, 8), nullable=False, default=0)
    kwh = Column(Numeric(30, 8), nullable=False, default=0)
    last_generated_at = Column(DateTime(timezone=True), nullable=True)
    updated_at = Column(DateTime(timezone=True), nullable=False, default=datetime.utcnow)

    user = relationship("User", back_populates="balance")


# =============================================================================
# –ü–∞–Ω–µ–ª–∏ –∏ –∞—Ä—Ö–∏–≤
# =============================================================================
class Panel(Base):
    """
    –°–æ–ª–Ω–µ—á–Ω–∞—è –ø–∞–Ω–µ–ª—å (–∞–∫—Ç–∏–≤–Ω–∞—è). –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–∫—É–ø–∫–∏ (activated_at),
    —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω ‚Äî 180 –¥–Ω–µ–π (expires_at).

    –í –ø—Ä–æ–µ–∫—Ç–µ –¥–µ–π—Å—Ç–≤—É–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: –Ω–∞ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ ‚â§ 1000 –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–∞–Ω–µ–ª–µ–π.
    –≠—Ç–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –Ω–∞ —É—Ä–æ–≤–Ω–µ –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏ (shop_routes/admin_routes), –∞ —Ç–∞–∫–∂–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è
    –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –≤ –ë–î (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ç—Ä–∏–≥–≥–µ—Ä/–ø—Ä–æ–≤–µ—Ä–∫–∞), –Ω–æ –∑–¥–µ—Å—å –æ—Å—Ç–∞–≤–ª—è–µ–º –Ω–∞ —É—Ä–æ–≤–Ω–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.

    –ü—Ä–∏ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ —Å—Ä–æ–∫–∞ –ø–∞–Ω–µ–ª—å –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—Å—è –≤ –∞—Ä—Ö–∏–≤ (PanelArchive), –∞ –∑–¥–µ—Å—å –ø–æ–º–µ—á–∞–µ—Ç—Å—è inactive –ª–∏–±–æ —É–¥–∞–ª—è–µ—Ç—Å—è.
    """
    __tablename__ = "panels"
    __table_args__ = (
        Index("ix_panels_user_active", "telegram_id", "active"),
        {"schema": SCHEMA},
    )

    id = Column(BigInteger, primary_key=True, autoincrement=True)
    telegram_id = Column(BigInteger, ForeignKey(f"{SCHEMA}.users.telegram_id", ondelete="CASCADE"), nullable=False)
    active = Column(Boolean, nullable=False, default=True)
    activated_at = Column(DateTime(timezone=True), nullable=False, default=datetime.utcnow)
    expires_at = Column(DateTime(timezone=True), nullable=False)  # = activated_at + 180 days (—Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –≤ –∫–æ–¥–µ)
    created_at = Column(DateTime(timezone=True), nullable=False, default=datetime.utcnow)
    updated_at = Column(DateTime(timezone=True), nullable=False, default=datetime.utcnow)

    user = relationship("User", back_populates="panels")


class PanelArchive(Base):
    """
    –ê—Ä—Ö–∏–≤ –ø–∞–Ω–µ–ª–µ–π. –°—é–¥–∞ –ø–µ—Ä–µ–Ω–æ—Å–∏–º –ø–∞–Ω–µ–ª–∏ –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏—é —Å—Ä–æ–∫–∞ (180 –¥–Ω–µ–π).
    –•—Ä–∞–Ω–∏–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: –ø–µ—Ä–∏–æ–¥ –∂–∏–∑–Ω–∏ –∏ –∫—Ç–æ –≤–ª–∞–¥–µ–ª.
    """
    __tablename__ = "panel_archive"
    __table_args__ = (
        Index("ix_panel_archive_user", "telegram_id"),
        {"schema": SCHEMA},
    )

    id = Column(BigInteger, primary_key=True, autoincrement=True)
    telegram_id = Column(BigInteger, ForeignKey(f"{SCHEMA}.users.telegram_id", ondelete="SET NULL"), nullable=True)
    activated_at = Column(DateTime(timezone=True), nullable=False)
    expired_at = Column(DateTime(timezone=True), nullable=False)
    archived_at = Column(DateTime(timezone=True), nullable=False, default=datetime.utcnow)


# =============================================================================
# EFHC –ø–µ—Ä–µ–≤–æ–¥—ã/–ª–æ–≥–∏ (–≤—Å–µ –¥–≤–∏–∂–µ–Ω–∏—è EFHC —á–µ—Ä–µ–∑ —ç—Ç—É —Ç–∞–±–ª–∏—Ü—É)
# =============================================================================
class EFHCTransfersLog(Base):
    """
    –õ–æ–≥ –≤—Å–µ—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤ EFHC (—á–µ—Ä–µ–∑ –±–∞–Ω–∫, –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è, —Å–ø–∏—Å–∞–Ω–∏—è):
      ‚Ä¢ from_id / to_id ‚Äî Telegram ID –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è/–ø–æ–ª—É—á–∞—Ç–µ–ª—è (–±–∞–Ω–∫ —Ç–æ–∂–µ Telegram ID).
      ‚Ä¢ amount ‚Äî NUMERIC(30,8)
      ‚Ä¢ reason ‚Äî —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–¥ –æ–ø–µ—Ä–∞—Ü–∏–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä:
          - 'shop_buy_efhc'         ‚Äî –ø–æ–∫—É–ø–∫–∞ EFHC (–±–∞–Ω–∫ -> user)
          - 'shop_panel_bonus'      ‚Äî —Å–ø–∏—Å–∞–Ω–∏–µ –±–æ–Ω—É—Å–Ω—ã—Ö EFHC: user.bonus -> –±–∞–Ω–∫ (–ª–æ–≥–∏—Ä—É–µ–º –¥–ª—è –∞—É–¥–∏—Ç–∞)
          - 'shop_panel_efhc'       ‚Äî —Å–ø–∏—Å–∞–Ω–∏–µ –æ–±—ã—á–Ω—ã—Ö EFHC: user -> –±–∞–Ω–∫
          - 'withdraw_lock'         ‚Äî –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ EFHC –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤—ã–≤–æ–¥–∞: user -> –±–∞–Ω–∫
          - 'withdraw_refund'       ‚Äî –≤–æ–∑–≤—Ä–∞—Ç –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏: –±–∞–Ω–∫ -> user
          - 'airdrop_bonus'         ‚Äî –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –±–æ–Ω—É—Å–æ–≤ (–ø—Ä–∏–º–µ—Ä)
          - ...
      ‚Ä¢ idempotency_key ‚Äî –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –¥–≤–æ–π–Ω–æ–π –∑–∞–ø–∏—Å–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ).
      ‚Ä¢ meta ‚Äî –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π JSON (–Ω–∞–ø—Ä–∏–º–µ—Ä, order_id, withdraw_id).
    """
    __tablename__ = "efhc_transfers_log"
    __table_args__ = (
        Index("ix_efhc_log_from_id", "from_id"),
        Index("ix_efhc_log_to_id", "to_id"),
        UniqueConstraint("idempotency_key", name="uq_efhc_log_idem"),
        {"schema": SCHEMA},
    )

    id = Column(BigInteger, primary_key=True, autoincrement=True)
    from_id = Column(BigInteger, nullable=False)
    to_id = Column(BigInteger, nullable=False)
    amount = Column(Numeric(30, 8), nullable=False)
    reason = Column(String(64), nullable=False)
    idempotency_key = Column(String(128), nullable=True)
    meta = Column(JSONB, nullable=True)
    ts = Column(DateTime(timezone=True), nullable=False, default=datetime.utcnow)


# =============================================================================
# Shop: –∑–∞–∫–∞–∑—ã –∏ manual-–∑–∞—è–≤–∫–∏ –Ω–∞ NFT
# =============================================================================
class ShopOrder(Base):
    """
    –ó–∞–∫–∞–∑ –≤ –º–∞–≥–∞–∑–∏–Ω–µ:
      - order_type: 'efhc'|'vip'|'nft'
      - efhc_amount: –¥–ª—è 'efhc' ‚Äî —Å–∫–æ–ª—å–∫–æ EFHC –∫—É–ø–∏—Ç—å
      - pay_asset: 'TON'|'USDT' ‚Äî —á–µ–º –ø–ª–∞—Ç–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      - pay_amount: —Å–∫–æ–ª—å–∫–æ –∑–∞–ø–ª–∞—Ç–∏–ª (–¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏)
      - ton_address: –∞–¥—Ä–µ—Å –ø–ª–∞—Ç–µ–ª—å—â–∏–∫–∞/–ø–æ–ª—É—á–∞—Ç–µ–ª—è (–æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ)
      - status: 'pending'|'paid'|'completed'|'rejected'|'canceled'|'failed'
      - idempotency_key: –∑–∞—â–∏—Ç–∞ –æ—Ç –¥—É–±–ª–µ–π
      - tx_hash: —Ö—ç—à –≤–Ω–µ—à–Ω–µ–π –æ–ø–ª–∞—Ç—ã (–µ—Å–ª–∏ –µ—Å—Ç—å)
    """
    __tablename__ = "shop_orders"
    __table_args__ = (
        Index("ix_shop_orders_user", "telegram_id"),
        Index("ix_shop_orders_status", "status"),
        UniqueConstraint("idempotency_key", name="uq_shop_orders_idem"),
        {"schema": SCHEMA},
    )

    id = Column(BigInteger, primary_key=True, autoincrement=True)
    telegram_id = Column(BigInteger, ForeignKey(f"{SCHEMA}.users.telegram_id", ondelete="CASCADE"), nullable=False)
    order_type = Column(String(16), nullable=False)                 # 'efhc', 'vip', 'nft'
    efhc_amount = Column(Numeric(30, 8), nullable=True)
    pay_asset = Column(String(16), nullable=True)                   # 'TON'|'USDT'
    pay_amount = Column(Numeric(30, 8), nullable=True)
    ton_address = Column(Text, nullable=True)
    status = Column(String(16), nullable=False, default="pending")  # —Å–º. –≤—ã—à–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ
    idempotency_key = Column(String(128), nullable=True)
    tx_hash = Column(Text, nullable=True)
    admin_id = Column(BigInteger, nullable=True)
    comment = Column(Text, nullable=True)
    created_at = Column(DateTime(timezone=True), nullable=False, default=datetime.utcnow)
    paid_at = Column(DateTime(timezone=True), nullable=True)
    completed_at = Column(DateTime(timezone=True), nullable=True)
    updated_at = Column(DateTime(timezone=True), nullable=False, default=datetime.utcnow)


class ManualNFTRequest(Base):
    """
    Manual-–∑–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–¥–∞—á—É VIP NFT –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ 'nft' –≤ –º–∞–≥–∞–∑–∏–Ω–µ.
      - request_type = 'vip_nft' (–Ω–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç).
      - status: 'open'|'processed'|'canceled'
    """
    __tablename__ = "manual_nft_requests"
    __table_args__ = (
        Index("ix_manual_nft_requests_user", "telegram_id"),
        {"schema": SCHEMA},
    )

    id = Column(BigInteger, primary_key=True, autoincrement=True)
    telegram_id = Column(BigInteger, ForeignKey(f"{SCHEMA}.users.telegram_id", ondelete="CASCADE"), nullable=False)
    wallet_address = Column(Text, nullable=True)
    request_type = Column(String(32), nullable=False, default="vip_nft")
    order_id = Column(BigInteger, ForeignKey(f"{SCHEMA}.shop_orders.id", ondelete="SET NULL"), nullable=True)
    status = Column(String(16), nullable=False, default="open")  # 'open'|'processed'|'canceled'
    created_at = Column(DateTime(timezone=True), nullable=False, default=datetime.utcnow)


# =============================================================================
# Withdraw: –∑–∞—è–≤–∫–∏ –Ω–∞ –≤—ã–≤–æ–¥ EFHC
# =============================================================================
class WithdrawRequest(Base):
    """
    –ó–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ EFHC:
      ‚Ä¢ –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏ EFHC —Å–ø–∏—Å—ã–≤–∞—é—Ç—Å—è user ‚Üí –±–∞–Ω–∫ (–±–ª–æ–∫–∏—Ä—É—é—Ç—Å—è) ‚Äî reason='withdraw_lock'.
      ‚Ä¢ –°—Ç–∞—Ç—É—Å—ã:
          - 'pending'   ‚Äî –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–ª, –∂–¥—ë–º –æ–¥–æ–±—Ä–µ–Ω–∏—è –∞–¥–º–∏–Ω–æ–º
          - 'approved'  ‚Äî –∞–¥–º–∏–Ω –æ–¥–æ–±—Ä–∏–ª
          - 'rejected'  ‚Äî –∞–¥–º–∏–Ω –æ—Ç–∫–ª–æ–Ω–∏–ª (–Ω—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å EFHC user ‚Üí reason='withdraw_refund')
          - 'sent'      ‚Äî –≤—ã–ø–ª–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ (tx_hash –∑–∞–ø–æ–ª–Ω–µ–Ω)
          - 'failed'    ‚Äî –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ
          - 'canceled'  ‚Äî –æ—Ç–º–µ–Ω–∞
    """
    __tablename__ = "withdrawals"
    __table_args__ = (
        Index("ix_withdrawals_user", "telegram_id"),
        Index("ix_withdrawals_status", "status"),
        UniqueConstraint("idempotency_key", name="uq_withdrawals_idem"),
        {"schema": SCHEMA},
    )

    id = Column(BigInteger, primary_key=True, autoincrement=True)
    telegram_id = Column(BigInteger, ForeignKey(f"{SCHEMA}.users.telegram_id", ondelete="CASCADE"), nullable=False)
    ton_address = Column(Text, nullable=False)
    amount_efhc = Column(Numeric(30, 8), nullable=False)
    asset = Column(String(16), nullable=False, default="TON")  # 'TON'|'USDT' ‚Äî —Å–ø–æ—Å–æ–± —Ä–µ–∞–ª—å–Ω–æ–π –≤—ã–ø–ª–∞—Ç—ã
    status = Column(String(16), nullable=False, default="pending")
    idempotency_key = Column(String(128), nullable=True)
    tx_hash = Column(Text, nullable=True)
    admin_id = Column(BigInteger, nullable=True)
    comment = Column(Text, nullable=True)
    created_at = Column(DateTime(timezone=True), nullable=False, default=datetime.utcnow)
    approved_at = Column(DateTime(timezone=True), nullable=True)
    sent_at = Column(DateTime(timezone=True), nullable=True)
    updated_at = Column(DateTime(timezone=True), nullable=False, default=datetime.utcnow)


# =============================================================================
# Exchange: –æ–±–º–µ–Ω–Ω–∏–∫ kWh ‚Üí EFHC (–±–µ–∑ –æ–±—Ä–∞—Ç–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏)
# =============================================================================
class KwhToEfhcExchangeLog(Base):
    """
    –õ–æ–≥ –æ–ø–µ—Ä–∞—Ü–∏–π –æ–±–º–µ–Ω–∞ kWh ‚Üí EFHC (–±–µ–∑ –æ–±—Ä–∞—Ç–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏):
      ‚Ä¢ user —Å–ø–∏—Å–∞–ª amount_kwh ‚Üí –ø–æ–ª—É—á–∏–ª amount_efhc (1:1).
      ‚Ä¢ idempotency_key ‚Äî –∫–ª—é—á –∏–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ (–µ—Å–ª–∏ –Ω—É–∂–µ–Ω).
      ‚Ä¢ reason: 'exchange_kwh_to_efhc' (–¥–ª—è –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–∏—è –ª–æ–≥–æ–≤ EFHCTransfersLog).
      ‚Ä¢ –ó–¥–µ—Å—å –∂–µ –º–æ–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å 'snapshot_kwh_before'/'after' –≤ meta EFHCTransfersLog, –Ω–æ
        –≤—ã–¥–µ–ª—è–µ–º –æ—Ç–¥–µ–ª—å–Ω—É—é —Ç–∞–±–ª–∏—Ü—É –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏.
    """
    __tablename__ = "kwh_to_efhc_exchange_log"
    __table_args__ = (
        Index("ix_exchange_user", "telegram_id"),
        UniqueConstraint("idempotency_key", name="uq_kwh_to_efhc_idem"),
        {"schema": SCHEMA},
    )

    id = Column(BigInteger, primary_key=True, autoincrement=True)
    telegram_id = Column(BigInteger, ForeignKey(f"{SCHEMA}.users.telegram_id", ondelete="CASCADE"), nullable=False)
    amount_kwh = Column(Numeric(30, 8), nullable=False)
    amount_efhc = Column(Numeric(30, 8), nullable=False)
    idempotency_key = Column(String(128), nullable=True)
    created_at = Column(DateTime(timezone=True), nullable=False, default=datetime.utcnow)


# =============================================================================
# –†–µ—Ñ–µ—Ä–∞–ª—ã: —Å–≤—è–∑–∏ –∏ –±–æ–Ω—É—Å—ã
# =============================================================================
class Referral(Base):
    """
    –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–≤—è–∑—å: –∫—Ç–æ –∫–æ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª.
      ‚Ä¢ invitee_id ‚Äî –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã–π (—É–Ω–∏–∫–∞–ª–µ–Ω; –æ–¥–∏–Ω –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã–π –Ω–µ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å 2-—Ö –∏–Ω–≤–∞–π—Ç–µ—Ä–æ–≤).
      ‚Ä¢ inviter_id ‚Äî –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–∏–π.
    """
    __tablename__ = "referrals"
    __table_args__ = (
        UniqueConstraint("invitee_id", name="uq_referrals_invitee"),
        Index("ix_referrals_inviter", "inviter_id"),
        {"schema": SCHEMA},
    )

    id = Column(BigInteger, primary_key=True, autoincrement=True)
    inviter_id = Column(BigInteger, ForeignKey(f"{SCHEMA}.users.telegram_id", ondelete="SET NULL"), nullable=True)
    invitee_id = Column(BigInteger, ForeignKey(f"{SCHEMA}.users.telegram_id", ondelete="CASCADE"), nullable=False)
    created_at = Column(DateTime(timezone=True), nullable=False, default=datetime.utcnow)


class ReferralBonusLog(Base):
    """
    –õ–æ–≥ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –±–æ–Ω—É—Å–æ–≤:
      ‚Ä¢ type:
          - 'first_panel' ‚Äî –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π –±–æ–Ω—É—Å 0.1 EFHC –∑–∞ –∫–∞–∂–¥–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞, –∫—É–ø–∏–≤—à–µ–≥–æ 1-—é –ø–∞–Ω–µ–ª—å.
          - 'threshold'   ‚Äî –±–æ–Ω—É—Å—ã –∑–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –ø–æ—Ä–æ–≥–æ–≤ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:
                           10 ‚Üí 1 EFHC, 100 ‚Üí 10 EFHC, 1000 ‚Üí 100 EFHC, 3000 ‚Üí 300 EFHC, 10000 ‚Üí 1000 EFHC.
      ‚Ä¢ count_at_moment ‚Äî —á–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –Ω–∞ –º–æ–º–µ–Ω—Ç –≤—ã–¥–∞—á–∏ –ø–æ—Ä–æ–≥–æ–≤–æ–≥–æ –±–æ–Ω—É—Å–∞.
      ‚Ä¢ amount_bonus_efhc ‚Äî NUMERIC(30,8), –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è –≤ bonus_efhc
      ‚Ä¢ idempotency_key ‚Äî –∑–∞—â–∏—Ç–∞ –æ—Ç –¥—É–±–ª–µ–π.
    """
    __tablename__ = "referral_bonus_log"
    __table_args__ = (
        Index("ix_ref_bonus_user", "telegram_id"),
        UniqueConstraint("idempotency_key", name="uq_ref_bonus_idem"),
        {"schema": SCHEMA},
    )

    id = Column(BigInteger, primary_key=True, autoincrement=True)
    telegram_id = Column(BigInteger, ForeignKey(f"{SCHEMA}.users.telegram_id", ondelete="CASCADE"), nullable=False)
    bonus_type = Column(String(32), nullable=False)  # 'first_panel'|'threshold'
    count_at_moment = Column(Integer, nullable=True)
    amount_bonus_efhc = Column(Numeric(30, 8), nullable=False)
    meta = Column(JSONB, nullable=True)
    idempotency_key = Column(String(128), nullable=True)
    created_at = Column(DateTime(timezone=True), nullable=False, default=datetime.utcnow)


# =============================================================================
# –ê–¥–º–∏–Ω-–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: –±–∞–Ω–∫ –∏ —Å—Ç–∞–≤–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
# =============================================================================
class AdminBankConfig(Base):
    """
    –¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–Ω–∫-—Å—á—ë—Ç–∞ EFHC (–∞–¥–º–∏–Ω—Å–∫–∏–π Telegram ID), –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π
    —É—Ö–æ–¥—è—Ç –≤—Å–µ —Å–ø–∏—Å–∞–Ω–∏—è (–≤–∫–ª—é—á–∞—è –≤–æ–∑–≤—Ä–∞—Ç –±–æ–Ω—É—Å–Ω—ã—Ö EFHC –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –ø–∞–Ω–µ–ª–µ–π,
    —Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ –∏ –ø—Ä.).

    ‚Ä¢ –í–æ–∑–º–æ–∂–Ω–∞ –º–∏–≥—Ä–∞—Ü–∏—è –Ω–∞ –Ω–æ–≤—ã–π Telegram ID ‚Äî –¥–ª—è —ç—Ç–æ–≥–æ –º–µ–Ω—è–µ—Ç—Å—è –ø–æ–ª–µ current_bank_telegram_id.
    ‚Ä¢ –ò—Å—Ç–æ—Ä–∏—é –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ñ–∏–∫—Å–∏—Ä—É–µ–º –≤ AdminBankHistory.
    """
    __tablename__ = "admin_bank_config"
    __table_args__ = (
        {"schema": SCHEMA},
    )

    id = Column(Integer, primary_key=True, autoincrement=True)  # –æ–±—ã—á–Ω–æ 1 –∑–∞–ø–∏—Å—å
    current_bank_telegram_id = Column(BigInteger, nullable=False)
    updated_at = Column(DateTime(timezone=True), nullable=False, default=datetime.utcnow)


class AdminBankHistory(Base):
    """
    –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–Ω–∫-—Å—á—ë—Ç–∞ (–∞–¥–º–∏–Ω—Å–∫–æ–≥–æ Telegram ID).
      ‚Ä¢ –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –∞—É–¥–∏—Ç–∞ –∏ —Ä–µ—Ç—Ä–æ—Å–ø–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –ª–æ–≥–æ–≤ EFHC.
    """
    __tablename__ = "admin_bank_history"
    __table_args__ = (
        {"schema": SCHEMA},
    )

    id = Column(BigInteger, primary_key=True, autoincrement=True)
    old_bank_telegram_id = Column(BigInteger, nullable=False)
    new_bank_telegram_id = Column(BigInteger, nullable=False)
    changed_by_admin = Column(BigInteger, nullable=True)  # –∫—Ç–æ –∏–∑–º–µ–Ω–∏–ª (–∞–¥–º–∏–Ω)
    changed_at = Column(DateTime(timezone=True), nullable=False, default=datetime.utcnow)


class AdminRateChange(Base):
    """
    –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–∑–æ–≤–æ–π –∏ VIP —Å—Ç–∞–≤–æ–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ kWh/—Å—É—Ç–∫–∏:
      ‚Ä¢ base_rate_kwh_per_day (–Ω–∞–ø—Ä–∏–º–µ—Ä, 0.59800000)
      ‚Ä¢ vip_rate_kwh_per_day  (–Ω–∞–ø—Ä–∏–º–µ—Ä, 0.64000000)
      ‚Ä¢ effective_from ‚Äî –∫–æ–≥–¥–∞ –≤—Å—Ç—É–ø–∞–µ—Ç –≤ —Å–∏–ª—É (—Å–æ–≥–ª–∞—Å–Ω–æ –±–∏–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª—É: –≤ 01:00 —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è).
      ‚Ä¢ changed_by_admin ‚Äî –∫—Ç–æ –≤–Ω—ë—Å –∏–∑–º–µ–Ω–µ–Ω–∏–µ.

    –ê–∫—Ç—É–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∫–∞–∫ –ø–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å —Å effective_from <= NOW().
    """
    __tablename__ = "admin_rate_change"
    __table_args__ = (
        Index("ix_rate_effective_from", "effective_from"),
        {"schema": SCHEMA},
    )

    id = Column(BigInteger, primary_key=True, autoincrement=True)
    base_rate_kwh_per_day = Column(Numeric(12, 8), nullable=False)  # 0.59800000 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    vip_rate_kwh_per_day = Column(Numeric(12, 8), nullable=False)   # 0.64000000 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    effective_from = Column(DateTime(timezone=True), nullable=False)
    changed_by_admin = Column(BigInteger, nullable=True)
    created_at = Column(DateTime(timezone=True), nullable=False, default=datetime.utcnow)


# =============================================================================
# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã/–ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
# =============================================================================
# –ü—Ä–∏–º–µ—Ä: –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å MATERIALIZED VIEW –¥–ª—è –ª–∏–¥–µ—Ä–æ–≤ —Ä–µ–π—Ç–∏–Ω–≥–∞ –ø–æ kWh/—Ä–µ—Ñ–µ—Ä–∞–ª–∞–º,
# –Ω–æ –≤ —Ä–∞–º–∫–∞—Ö models.py –º—ã –Ω–µ —Å–æ–∑–¥–∞—ë–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è. –ò—Ö –ª—É—á—à–µ –¥–µ—Ä–∂–∞—Ç—å –≤ Alembic-–º–∏–≥—Ä–∞—Ü–∏—è—Ö.

# =============================================================================
# –í–ê–ñ–ù–û:
# ‚Ä¢ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ö–µ–º—ã/—Ç–∞–±–ª–∏—Ü –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ Alembic –º–∏–≥—Ä–∞—Ü–∏—è—Ö. –ù–∞ —Å—Ç–∞—Ä—Ç–µ –º–æ–∂–Ω–æ
#   –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å on_startup_init_db() –¥–ª—è CREATE SCHEMA IF NOT EXISTS.
# ‚Ä¢ –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π/—Å–ø–∏—Å–∞–Ω–∏–π EFHC ‚Äî —á–µ—Ä–µ–∑ efhc_transactions.py:
#     - debit_user_to_bank(db, user_id, amount)
#     - credit_user_from_bank(db, user_id, amount)
#   –û–Ω–∏ –æ–±–Ω–æ–≤–ª—è—é—Ç Balance + –ø–∏—à—É—Ç EFHCTransfersLog (idempotent –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –∫–ª—é—á–∞).
# ‚Ä¢ –ë–æ–Ω—É—Å–Ω—ã–µ EFHC —Ç—Ä–∞—Ç—è—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –ø–∞–Ω–µ–ª–∏. –ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –ø–∞–Ω–µ–ª–µ–π:
#     - bonus —Å–ø–∏—Å—ã–≤–∞–µ–º —É user ‚Üí –∑–∞—á–∏—Å–ª—è–µ–º –≤ –ë–∞–Ω–∫ (–∏ –ª–æ–≥ reason='shop_panel_bonus').
#     - –Ω–µ–¥–æ—Å—Ç–∞—é—â—É—é —á–∞—Å—Ç—å ‚Äî efhc —Å–ø–∏—Å—ã–≤–∞–µ–º user ‚Üí –ë–∞–Ω–∫ (–∏ –ª–æ–≥ reason='shop_panel_efhc').
# ‚Ä¢ VIP-—Å—Ç–∞—Ç—É—Å –≤–∫–ª—é—á–∞–µ—Ç—Å—è/–≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π NFT-–ø—Ä–æ–≤–µ—Ä–∫–∏.
#   –ü–æ–∫—É–ø–∫–∞ VIP NFT –≤ Shop —Å–æ–∑–¥–∞—ë—Ç manual-–∑–∞—è–≤–∫—É, –Ω–µ –≤–∫–ª—é—á–∞–µ—Ç VIP –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
# ‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è kWh —Å—Ç–∞—Ä—Ç—É–µ—Ç —Å—Ä–∞–∑—É —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–∫—É–ø–∫–∏ –ø–µ—Ä–≤–æ–π –ø–∞–Ω–µ–ª–∏ (shop_routes: last_generated_at=NOW()).
# ‚Ä¢ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–∞–Ω–µ–ª–µ–π –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚Äî –≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç—Å—è –≤ —Ä—É—á–∫–∞—Ö Shop/Admin (<=1000 –∞–∫—Ç–∏–≤–Ω—ã—Ö).
# ‚Ä¢ EFHC/kWh ‚Äî —Å—Ç—Ä–æ–≥–æ NUMERIC(30,8) —Å –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ–º –¥–æ 8 –∑–Ω–∞–∫–æ–≤ –≤ –∫–æ–¥–µ (Decimal quantize '0.00000001').
# -----------------------------------------------------------------------------
