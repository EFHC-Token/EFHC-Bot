# üìÇ backend/app/scheduler.py
# -----------------------------------------------------------------------------
# –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á (–µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏)
# -----------------------------------------------------------------------------
# –ò—Å–ø–æ–ª—å–∑—É–µ–º APScheduler (AsyncIOScheduler), —á—Ç–æ–±—ã –≤ —Ñ–æ–Ω–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ
# –∑–∞–¥–∞—á–∏:
# 1. –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 00:00 UTC ‚Üí –ø—Ä–æ–≤–µ—Ä–∫–∞ VIP NFT (—É –∫–æ–≥–æ –µ—Å—Ç—å ‚Äî –ø–æ–ª—É—á–∞—é—Ç –±–æ–Ω—É—Å).
# 2. –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 00:30 UTC ‚Üí –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –∫–í—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å –ø–∞–Ω–µ–ª—è–º–∏.
# -----------------------------------------------------------------------------

from apscheduler.schedulers.asyncio import AsyncIOScheduler
from apscheduler.triggers.cron import CronTrigger
from fastapi import FastAPI
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy import select
from decimal import Decimal

from .config import get_settings
from .database import async_session
from .models import User, Panel
from .nft_checker import check_user_vip

settings = get_settings()


# -----------------------------------------------------------------------------
# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
# -----------------------------------------------------------------------------
def init_scheduler(app: FastAPI):
    scheduler = AsyncIOScheduler(timezone="UTC")

    # –ó–∞–¥–∞—á–∞ 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ NFT –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 00:00
    scheduler.add_job(
        verify_all_vip_nfts,
        CronTrigger.from_crontab("0 0 * * *"),  # 00:00 UTC
        id="vip_check"
    )

    # –ó–∞–¥–∞—á–∞ 2. –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 00:30
    scheduler.add_job(
        accrue_energy_all,
        CronTrigger.from_crontab("30 0 * * *"),  # 00:30 UTC
        id="energy_accrual"
    )

    scheduler.start()
    print("[EFHC][Scheduler] –ó–∞–¥–∞—á–∏ –∑–∞–ø—É—â–µ–Ω—ã")
    return scheduler


# -----------------------------------------------------------------------------
# –ó–∞–¥–∞—á–∞: –ü—Ä–æ–≤–µ—Ä–∫–∞ VIP NFT
# -----------------------------------------------------------------------------
async def verify_all_vip_nfts():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ –Ω–∞–ª–∏—á–∏–µ VIP NFT.
    –£ –∫–æ–≥–æ –µ—Å—Ç—å NFT ‚Äî –æ–±–Ω–æ–≤–ª—è–µ–º user.is_vip = True.
    """
    async with async_session() as db:
        res = await db.execute(select(User))
        users = res.scalars().all()

        for u in users:
            has_vip = await check_user_vip(u.wallet_ton)
            u.is_vip = has_vip

        await db.commit()

    print("[EFHC][Scheduler] –ü—Ä–æ–≤–µ—Ä–∫–∞ VIP NFT –∑–∞–≤–µ—Ä—à–µ–Ω–∞")


# -----------------------------------------------------------------------------
# –ó–∞–¥–∞—á–∞: –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –∫–í—Ç
# -----------------------------------------------------------------------------
async def accrue_energy_all():
    """
    –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –Ω–∞—á–∏—Å–ª—è–µ–º —ç–Ω–µ—Ä–≥–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏—Ö –ø–∞–Ω–µ–ª–µ–π.
    - –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å VIP NFT ‚Üí –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è DAILY_GEN_VIP_KWH
    - –ò–Ω–∞—á–µ DAILY_GEN_BASE_KWH
    """
    async with async_session() as db:
        res = await db.execute(select(User))
        users = res.scalars().all()

        for u in users:
            # –ü—Ä–æ–≤–µ—Ä–∏–º –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–∞–Ω–µ–ª–∏
            res_p = await db.execute(select(Panel).where(Panel.user_id == u.id, Panel.is_active == True))
            panels = res_p.scalars().all()

            if not panels:
                continue

            daily_gen = settings.DAILY_GEN_VIP_KWH if u.is_vip else settings.DAILY_GEN_BASE_KWH
            total_kwh = Decimal(daily_gen) * Decimal(len(panels))

            u.balance_kwh = (u.balance_kwh or Decimal("0")) + total_kwh

        await db.commit()

    print("[EFHC][Scheduler] –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
