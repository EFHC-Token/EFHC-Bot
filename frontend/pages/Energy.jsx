import React, { useEffect, useState } from "react";
import axios from "axios";
import { useNavigate } from "react-router-dom";

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç ProgressBar
 * –í–∏–∑—É–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è
 */
function ProgressBar({ current, target }) {
  const percent = Math.min((current / target) * 100, 100);
  return (
    <div className="w-full bg-gray-800 rounded-full h-4 overflow-hidden my-3">
      <div
        className="bg-yellow-500 h-4 transition-all duration-700"
        style={{ width: `${percent}%` }}
      ></div>
    </div>
  );
}

/**
 * –°–ª–æ–π –ø—Ä–∏—Ä–æ–¥—ã (–≥–æ—Ä—ã, —Ä–µ–∫–∞, –¥–µ—Ä–µ–≤—å—è, —Å–æ–ª–Ω—Ü–µ –∏ —Ç–¥.)
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function NatureLayer({ level }) {
  return (
    <div className="absolute inset-0 w-full h-full pointer-events-none z-10">
      {/* –†–µ–∫–∞ (—É—Ä–æ–≤–µ–Ω—å >= 1) */}
      {level >= 1 && (
        <div className="absolute bottom-0 left-0 w-full h-24 bg-blue-600 opacity-60"></div>
      )}
      {/* –î–µ—Ä–µ–≤—å—è (—É—Ä–æ–≤–µ–Ω—å >= 3) */}
      {level >= 3 && (
        <div className="absolute bottom-24 left-10 text-green-600 text-6xl">üå≥</div>
      )}
      {level >= 5 && (
        <div className="absolute bottom-24 right-12 text-green-600 text-6xl">üå≤</div>
      )}
      {/* –ì–æ—Ä—ã (—É—Ä–æ–≤–µ–Ω—å >= 6) */}
      {level >= 6 && (
        <div className="absolute bottom-32 left-1/3 text-gray-500 text-7xl">‚õ∞Ô∏è</div>
      )}
      {/* –ñ–∏–≤–æ—Ç–Ω—ã–µ (—É—Ä–æ–≤–µ–Ω—å >= 8) */}
      {level >= 8 && (
        <div className="absolute bottom-28 right-1/4 text-yellow-200 text-5xl">ü¶å</div>
      )}
      {/* –ü—Ç–∏—Ü—ã –∏ —Å–æ–ª–Ω—Ü–µ (—É—Ä–æ–≤–µ–Ω—å >= 10) */}
      {level >= 10 && (
        <div className="absolute top-8 left-1/4 text-yellow-400 text-5xl">‚òÄÔ∏è</div>
      )}
      {level >= 11 && (
        <div className="absolute top-12 right-1/3 text-white text-3xl">üïäÔ∏è</div>
      )}
    </div>
  );
}

/**
 * –°–ª–æ–π —Å —ç–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–Ω—Ü–∏—è–º–∏ (–°–≠–°, –í–≠–°, –ì–≠–°)
 */
function EnergyStationsLayer({ level }) {
  return (
    <div className="absolute inset-0 w-full h-full pointer-events-none z-20">
      {/* –°–≠–° ‚Äî –ø–æ—è–≤–ª—è—é—Ç—Å—è –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ (—É—Ä–æ–≤–µ–Ω—å >= 2,4,6,8) */}
      {level >= 2 && (
        <div className="absolute bottom-12 left-5 text-yellow-400 text-5xl">üîÜ</div>
      )}
      {level >= 4 && (
        <div className="absolute bottom-12 left-20 text-yellow-400 text-5xl">üîÜ</div>
      )}
      {/* –í–≠–° ‚Äî –ø–æ—è–≤–ª—è—é—Ç—Å—è —Å —É—Ä–æ–≤–Ω–µ–π 6‚Äì9 */}
      {level >= 6 && (
        <div className="absolute bottom-20 right-12 text-white text-6xl">üåÄ</div>
      )}
      {level >= 9 && (
        <div className="absolute bottom-20 right-24 text-white text-6xl">üåÄ</div>
      )}
      {/* –ì–≠–° ‚Äî –ø–æ—è–≤–ª—è—é—Ç—Å—è —Å —É—Ä–æ–≤–Ω–µ–π 10‚Äì12 */}
      {level >= 10 && (
        <div className="absolute bottom-0 left-1/2 text-blue-400 text-5xl">üíß</div>
      )}
      {level >= 12 && (
        <div className="absolute bottom-0 right-1/2 text-blue-400 text-5xl">üíß</div>
      )}
    </div>
  );
}

/**
 * –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ Energy —Å –º–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤—ã–º —Å–ª–æ–∏—Å—Ç—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º
 */
export default function Energy({ userId }) {
  const [stats, setStats] = useState(null);
  const navigate = useNavigate();

  useEffect(() => {
    axios
      .get(`/api/energy/${userId}`)
      .then((res) => setStats(res.data))
      .catch((err) => console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ energy:", err));
  }, [userId]);

  if (!stats) {
    return (
      <div className="text-center text-white py-20">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</div>
    );
  }

  const { total_energy, level, level_name, next_level, panels_active, gen_per_day } = stats;

  return (
    <div className="relative w-full min-h-screen bg-black overflow-hidden">
      {/* ===== –°–ª–æ–π 1: –§–æ–Ω ===== */}
      <div className="absolute inset-0 bg-gradient-to-b from-gray-900 to-black z-0"></div>

      {/* ===== –°–ª–æ–π 2: –ü—Ä–∏—Ä–æ–¥–∞ ===== */}
      <NatureLayer level={level} />

      {/* ===== –°–ª–æ–π 3: –°—Ç–∞–Ω—Ü–∏–∏ (–°–≠–°, –í–≠–°, –ì–≠–°) ===== */}
      <EnergyStationsLayer level={level} />

      {/* ===== –°–ª–æ–π 4: UI-–ö–∞—Ä–∫–∞—Å ===== */}
      <div className="relative z-50 px-4 py-6 text-white">
        {/* –û–±—â–∞—è —ç–Ω–µ—Ä–≥–∏—è –∏ —É—Ä–æ–≤–µ–Ω—å */}
        <div className="text-center mb-4">
          <h1 className="text-3xl font-bold text-yellow-400">
            ‚ö° {total_energy.toFixed(3)} kWh
          </h1>
          <p className="text-sm mt-1">
            {level}/12 ‚Äî <span className="text-green-400">{level_name}</span>
          </p>
        </div>

        {/* –ü—Ä–æ–≥—Ä–µ—Å—Å–±–∞—Ä */}
        <ProgressBar current={total_energy} target={next_level} />

        <p className="text-xs text-center text-gray-400 mb-6">
          –û—Å—Ç–∞–ª–æ—Å—å {(next_level - total_energy).toFixed(3)} kWh –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è
        </p>

        {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã */}
        <div className="grid grid-cols-3 gap-2 text-center">
          <button
            onClick={() => navigate("/panels")}
            className="bg-gray-800 rounded-xl py-3 hover:bg-gray-700 transition"
          >
            <div className="text-xl font-bold">{panels_active}</div>
            <div className="text-xs text-gray-400">–ü–∞–Ω–µ–ª–µ–π</div>
          </button>

          <button
            onClick={() => navigate("/exchange")}
            className="bg-gray-800 rounded-xl py-3 hover:bg-gray-700 transition"
          >
            <div className="text-xl font-bold">{gen_per_day.toFixed(3)}</div>
            <div className="text-xs text-gray-400">–∫–í—Ç/—Å—É—Ç–∫–∏</div>
          </button>

          <button
            onClick={() => navigate("/ranks")}
            className="bg-gray-800 rounded-xl py-3 hover:bg-gray-700 transition"
          >
            <div className="text-xl font-bold">
              {(next_level - total_energy).toFixed(0)}
            </div>
            <div className="text-xs text-gray-400">–î–æ —É—Ä–æ–≤–Ω—è</div>
          </button>
        </div>
      </div>
    </div>
  );
}
