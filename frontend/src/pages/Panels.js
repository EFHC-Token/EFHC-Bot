import React, { useEffect, useMemo, useState } from "react";
import axios from "axios";

/**
 * Panels.jsx ‚Äî –°—Ç—Ä–∞–Ω–∏—Ü–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞–Ω–µ–ª—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * -----------------------------------------------------------------------------
 * –ß—Ç–æ –¥–µ–ª–∞–µ—Ç:
 *  ‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç:
 *      - –ë–∞–ª–∞–Ω—Å EFHC (–ª–æ–∫–∞–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ),
 *      - –°—É–º–º–∞—Ä–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤ —Å—É—Ç–∫–∏,
 *      - –ö–æ–ª-–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–∞–Ω–µ–ª–µ–π,
 *      - –°—Ç–∞—Ç—É—Å—ã: VIP –∏ "–ê–∫—Ç–∏–≤–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å".
 *  ‚Ä¢ –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–∫–∏:
 *      - –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ (—Å –¥–Ω—è–º–∏ –¥–æ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∏–∑ 180),
 *      - –ê—Ä—Ö–∏–≤–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ (days_left = 0).
 *  ‚Ä¢ –†–µ–∞–ª–∏–∑—É–µ—Ç –ø–æ–∫—É–ø–∫—É –ø–∞–Ω–µ–ª–∏ –∑–∞ 100 EFHC —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –º–∞–∫—Å–∏–º—É–º 1000 –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–∞–Ω–µ–ª–µ–π.
 *  ‚Ä¢ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: –∑–∞–≥—Ä—É–∑–∫–∞, –æ—à–∏–±–∫–∏, —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∫—É–ø–∫–∏.
 *
 * –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:
 *  ‚Ä¢ axios ‚Äî –∑–∞–ø—Ä–æ—Å—ã –∫ backend API:
 *      - GET /api/panels/:userId ‚Äî –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–∞–Ω–µ–ª–µ–π
 *      - POST /api/panels/purchase ‚Äî –ø–æ–∫—É–ø–∫–∞ –ø–∞–Ω–µ–ª–∏
 *
 * –í–∞–∂–Ω—ã–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–µ –ø—Ä–æ–µ–∫—Ç–∞):
 *  ‚Ä¢ PANEL_PRICE_EFHC = 100 (—Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–∞–Ω–µ–ª–∏ ‚Äî –≤—Å–µ–≥–¥–∞ 100 EFHC)
 *  ‚Ä¢ MAX_ACTIVE_PANELS = 1000 (–ª–∏–º–∏—Ç –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–∞–Ω–µ–ª–µ–π)
 *  ‚Ä¢ DAYS_ACTIVE = 180 (—Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è)
 *  ‚Ä¢ ENERGY_PER_DAY_BASE = 0.598 (–±–µ–∑ VIP)
 *  ‚Ä¢ ENERGY_PER_DAY_VIP = 0.640 (—Å VIP +7%)
 *
 * UI-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ù–ï —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–µ—Ä—Ö–Ω–µ–π –ø–∞–Ω–µ–ª–∏ (TopBar). TopBar –≤—ã–Ω–µ—Å–µ–Ω –æ—Ç–¥–µ–ª—å–Ω–æ.
 *
 * –ü—Ä–∏–º–µ—á–∞–Ω–∏—è:
 *  ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç—ë–º–Ω—É—é —Ç–µ–º—É (black / gray / orange).
 *  ‚Ä¢ –°—Ç–∞—Ç—É—Å—ã VIP –∏ "–ê–∫—Ç–∏–≤–Ω—ã–π" –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∫–∞–∫ –º–µ—Ç–∫–∏.
 *  ‚Ä¢ –ü—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–∞ 1000 –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–∞–Ω–µ–ª–µ–π –∫–Ω–æ–ø–∫–∞ –ø–æ–∫—É–ø–∫–∏ –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è.
 *  ‚Ä¢ –ü—Ä–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–µ EFHC (<100) ‚Äî —Ç–∞–∫–∂–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è.
 *  ‚Ä¢ –ü–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑ –±—ç–∫–µ–Ω–¥–∞.
 */

const PANEL_PRICE_EFHC = 100;       // —Ü–µ–Ω–∞ –ø–∞–Ω–µ–ª–∏ –≤ EFHC (—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è)
const MAX_ACTIVE_PANELS = 1000;     // –ª–∏–º–∏—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–∞–Ω–µ–ª–µ–π
const DAYS_ACTIVE = 180;            // —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ø–∞–Ω–µ–ª–∏ –≤ –¥–Ω—è—Ö
const ENERGY_PER_DAY_BASE = 0.598;  // –±–∞–∑–æ–≤–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è (–∫–í—Ç/—Å—É—Ç–∫–∏)
const ENERGY_PER_DAY_VIP = 0.640;   // VIP –≥–µ–Ω–µ—Ä–∞—Ü–∏—è (+7%, –æ–∫—Ä—É–≥–ª–µ–Ω–æ 0.64)

export default function Panels({ userId }) {
  // --- –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö, –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Å –±—ç–∫–∞
  const [loading, setLoading] = useState(true);          // –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
  const [error, setError] = useState(null);              // —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏
  const [activePanels, setActivePanels] = useState([]);  // —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–∞–Ω–µ–ª–µ–π
  const [archivedPanels, setArchivedPanels] = useState([]); // —Å–ø–∏—Å–æ–∫ –∞—Ä—Ö–∏–≤–Ω—ã—Ö –ø–∞–Ω–µ–ª–µ–π
  const [isVip, setIsVip] = useState(false);             // VIP/NFT —Ñ–ª–∞–≥
  const [isActiveUser, setIsActiveUser] = useState(false); // —Ñ–ª–∞–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const [genPerDay, setGenPerDay] = useState(0);         // —Å—É–º–º–∞—Ä–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è (–∫–í—Ç/—Å—É—Ç–∫–∏)
  const [panelCount, setPanelCount] = useState(0);       // –∫–æ–ª-–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–∞–Ω–µ–ª–µ–π
  const [efhcBalance, setEfhcBalance] = useState(0);     // –±–∞–ª–∞–Ω—Å EFHC –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è

  // --- –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–∫—É–ø–∫–∏
  const [purchaseLoading, setPurchaseLoading] = useState(false);
  const [purchaseMessage, setPurchaseMessage] = useState("");

  /**
   * fetchPanelsData ‚Äî –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–∞–Ω–µ–ª–∏ —Å –±–µ–∫–µ–Ω–¥–∞.
   * GET /api/panels/:userId
   *
   * –û—Ç–≤–µ—Ç (–æ–∂–∏–¥–∞–µ–º—ã–π):
   * {
   *   "active_panels": [{"start_date": "2025-07-10", "days_left": 173}, ...],
   *   "archived_panels": [{"start_date": "2025-02-13", "days_left": 0}, ...],
   *   "is_vip": true,
   *   "is_active_user": true,
   *   "generation_per_day": 12.8,
   *   "panels_active_count": 20,
   *   "efhc_balance": 540.0
   * }
   */
  async function fetchPanelsData() {
    try {
      setLoading(true);
      setError(null);

      const res = await axios.get(`/api/panels/${userId}`);

      const data = res.data || {};
      setActivePanels(Array.isArray(data.active_panels) ? data.active_panels : []);
      setArchivedPanels(Array.isArray(data.archived_panels) ? data.archived_panels : []);
      setIsVip(Boolean(data.is_vip));
      setIsActiveUser(Boolean(data.is_active_user));
      setGenPerDay(Number(data.generation_per_day || 0));
      setPanelCount(Number(data.panels_active_count || 0));
      // –ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ, —á—Ç–æ–±—ã –±—ç–∫ –≤–æ–∑–≤—Ä–∞—â–∞–ª –±–∞–ª–∞–Ω—Å EFHC:
      if (typeof data.efhc_balance === "number") {
        setEfhcBalance(Number(data.efhc_balance));
      }
      setLoading(false);
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–∞–Ω–µ–ª–µ–π:", err);
      setError("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–∞–Ω–µ–ª–µ–π. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.");
      setLoading(false);
    }
  }

  // –ü–µ—Ä–≤–∏—á–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞
  useEffect(() => {
    fetchPanelsData();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [userId]);

  /**
   * canPurchase ‚Äî –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ–∫—É–ø–∫–∏:
   *  ‚Ä¢ EFHC balance >= 100
   *  ‚Ä¢ panelCount < 1000
   */
  const canPurchase = useMemo(() => {
    return efhcBalance >= PANEL_PRICE_EFHC && panelCount < MAX_ACTIVE_PANELS;
  }, [efhcBalance, panelCount]);

  /**
   * handlePurchasePanel ‚Äî –¥–µ–π—Å—Ç–≤–∏–µ "–ö—É–ø–∏—Ç—å –ø–∞–Ω–µ–ª—å".
   * POST /api/panels/purchase { user_id: number }
   *
   * –°–µ—Ä–≤–µ—Ä–Ω–∞—è –ª–æ–≥–∏–∫–∞:
   *  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—è–µ—Ç efhc_balance >= 100
   *  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—è–µ—Ç panelCount < 1000
   *  ‚Ä¢ –°–ø–∏—Å—ã–≤–∞–µ—Ç 100 EFHC, –¥–æ–±–∞–≤–ª—è–µ—Ç 100EFHC –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π –±–∞–Ω–∫ EFHC
   *  ‚Ä¢ –°–æ–∑–¥–∞—ë—Ç –ø–∞–Ω–µ–ª—å c 180 –¥–Ω—è–º–∏
   *  ‚Ä¢ –°—Ç–∞–≤–∏—Ç is_active_user=true (–µ—Å–ª–∏ –ø–µ—Ä–≤–æ–π –ø–æ–∫—É–ø–∫–æ–π)
   */
  async function handlePurchasePanel() {
    setPurchaseMessage("");
    if (!canPurchase) {
      setPurchaseMessage("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ EFHC –∏–ª–∏ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç 1000 –ø–∞–Ω–µ–ª–µ–π.");
      return;
    }

    try {
      setPurchaseLoading(true);
      const resp = await axios.post("/api/panels/purchase", { user_id: userId });

      const ok = resp?.data?.success;
      const msg = resp?.data?.message || (ok ? "–ü–∞–Ω–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∫—É–ø–ª–µ–Ω–∞." : "–ù–µ —É–¥–∞–ª–æ—Å—å –∫—É–ø–∏—Ç—å –ø–∞–Ω–µ–ª—å.");

      setPurchaseMessage(msg);
      setPurchaseLoading(false);

      if (ok) {
        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö ‚Äî –æ–±–Ω–æ–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å, panelCount –∏ —Å–ø–∏—Å–∫–∏
        await fetchPanelsData();
      }
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –ø–∞–Ω–µ–ª–∏:", err);
      setPurchaseMessage("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.");
      setPurchaseLoading(false);
    }
  }

  if (loading) {
    return <div className="text-center text-white py-20">–ó–∞–≥—Ä—É–∑–∫–∞ –ø–∞–Ω–µ–ª–µ–π...</div>;
  }

  if (error) {
    return (
      <div className="text-center text-red-400 py-20">
        {error}
      </div>
    );
  }

  // UI: –º–µ—Ç–∫–∞ VIP/NFT
  const vipLabel = isVip ? (
    <span className="inline-block bg-green-600 text-white text-xs px-2 py-1 rounded-md">üåü VIP</span>
  ) : (
    <span className="inline-block bg-gray-600 text-white text-xs px-2 py-1 rounded-md">üåü VIP: –Ω–µ—Ç</span>
  );

  // UI: –º–µ—Ç–∫–∞ "–ê–∫—Ç–∏–≤–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
  const activeUserLabel = isActiveUser ? (
    <span className="inline-block bg-green-500 text-white text-xs px-2 py-1 rounded-md">üü¢ –ê–∫—Ç–∏–≤–Ω—ã–π</span>
  ) : (
    <span className="inline-block bg-gray-600 text-white text-xs px-2 py-1 rounded-md">üî¥ –ù–µ –∞–∫—Ç–∏–≤–Ω—ã–π</span>
  );

  return (
    <div className="w-full min-h-screen bg-black text-white px-4 py-6">
      {/* –í–µ—Ä—Ö–Ω–∏–π –±–ª–æ–∫ —Å —Ü–∏—Ñ—Ä–∞–º–∏ –∏ —Å—Ç–∞—Ç—É—Å–∞–º–∏ (–ª–æ–∫–∞–ª—å–Ω—ã–π –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã Panels) */}
      <div className="mb-4 p-4 rounded-xl bg-gray-900">
        {/* –°—Ç—Ä–æ–∫–∞: –ë–∞–ª–∞–Ω—Å EFHC –∏ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è/—Å—É—Ç–∫–∏ */}
        <div className="flex items-center justify-between mb-2">
          <div>
            <div className="text-xs text-gray-400">–ë–∞–ª–∞–Ω—Å EFHC</div>
            <div className="text-2xl font-semibold">{Number(efhcBalance).toFixed(3)} EFHC</div>
          </div>
          <div className="text-right">
            <div className="text-xs text-gray-400">–ì–µ–Ω–µ—Ä–∞—Ü–∏—è / —Å—É—Ç–∫–∏</div>
            <div className="text-2xl font-semibold">{Number(genPerDay).toFixed(3)} –∫–í—Ç</div>
          </div>
        </div>
        {/* –°—Ç—Ä–æ–∫–∞: –ö–æ–ª-–≤–æ –ø–∞–Ω–µ–ª–µ–π –∏ —Å—Ç–∞—Ç—É—Å—ã */}
        <div className="flex items-center justify-between">
          <div>
            <div className="text-xs text-gray-400">–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–∞–Ω–µ–ª–µ–π</div>
            <div className="text-2xl font-bold">{panelCount}</div>
            <div className="text-xs text-gray-500">–ú–∞–∫—Å–∏–º—É–º: {MAX_ACTIVE_PANELS}</div>
          </div>
          <div className="flex gap-2">
            {vipLabel}
            {activeUserLabel}
          </div>
        </div>
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ –ø–æ–∫—É–ø–∫–∏ –ø–∞–Ω–µ–ª–∏ */}
      <div className="mb-4">
        <button
          onClick={handlePurchasePanel}
          disabled={!canPurchase || purchaseLoading}
          className={`w-full py-3 rounded-xl text-white font-semibold
            ${canPurchase && !purchaseLoading ? "bg-orange-600 hover:bg-orange-500" : "bg-gray-700 cursor-not-allowed"}
          `}
        >
          {purchaseLoading ? "–ü–æ–∫—É–ø–∫–∞..." : `–ö—É–ø–∏—Ç—å –ø–∞–Ω–µ–ª—å ‚Äî ${PANEL_PRICE_EFHC} EFHC`}
        </button>
        <p className="text-xs text-gray-400 mt-2">
          –°—Ç–æ–∏–º–æ—Å—Ç—å –ø–∞–Ω–µ–ª–∏ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è: 100 EFHC. –õ–∏–º–∏—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–∞–Ω–µ–ª–µ–π: 1000. –ü–∞–Ω–µ–ª—å –∞–∫—Ç–∏–≤–Ω–∞ 180 –¥–Ω–µ–π.
        </p>
        {purchaseMessage && (
          <div className="mt-2 text-sm text-yellow-300">
            {purchaseMessage}
          </div>
        )}
      </div>

      {/* –°–ø–∏—Å–∫–∏: –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ / –ê—Ä—Ö–∏–≤–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-4">
        {/* –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ */}
        <div className="rounded-xl bg-gray-900 p-4">
          <div className="flex items-center justify-between mb-3">
            <h2 className="text-lg font-semibold">–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–∞–Ω–µ–ª–∏</h2>
            <div className="text-xs text-gray-400">
              –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–¥–Ω–æ–π –ø–∞–Ω–µ–ª–∏: {isVip ? `${ENERGY_PER_DAY_VIP}` : `${ENERGY_PER_DAY_BASE}`} –∫–í—Ç/—Å—É—Ç–∫–∏
            </div>
          </div>
          {activePanels.length === 0 ? (
            <div className="text-gray-400 text-sm">
              –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–∞–Ω–µ–ª–µ–π.
            </div>
          ) : (
            <ul className="space-y-2">
              {activePanels.map((p, idx) => (
                <li
                  key={idx}
                  className="flex items-center justify-between rounded-lg bg-gray-800 px-3 py-2"
                >
                  <div>
                    <div className="text-sm">–ü–∞–Ω–µ–ª—å –æ—Ç {p.start_date}</div>
                    <div className="text-xs text-gray-400">
                      –û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π: {p.days_left ?? "-"}
                    </div>
                  </div>
                  <div className="text-xs text-gray-500">
                    –ê–∫—Ç–∏–≤–Ω–∞ –¥–æ {getEndDateLabel(p.start_date, DAYS_ACTIVE)}
                  </div>
                </li>
              ))}
            </ul>
          )}
        </div>

        {/* –ê—Ä—Ö–∏–≤–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ */}
        <div className="rounded-xl bg-gray-900 p-4">
          <h2 className="text-lg font-semibold mb-3">–ê—Ä—Ö–∏–≤ –ø–∞–Ω–µ–ª–µ–π</h2>
          {archivedPanels.length === 0 ? (
            <div className="text-gray-400 text-sm">
              –ê—Ä—Ö–∏–≤ –ø—É—Å—Ç.
            </div>
          ) : (
            <ul className="space-y-2">
              {archivedPanels.map((p, idx) => (
                <li
                  key={idx}
                  className="flex items-center justify-between rounded-lg bg-gray-800 px-3 py-2"
                >
                  <div>
                    <div className="text-sm">–ü–∞–Ω–µ–ª—å –æ—Ç {p.start_date}</div>
                    <div className="text-xs text-gray-400">–°—Ç–∞—Ç—É—Å: –∑–∞–≤–µ—Ä—à–µ–Ω–∞</div>
                  </div>
                  <div className="text-xs text-gray-500">
                    {/* –ú–æ–∂–µ–º –ø–æ–∫–∞–∑–∞—Ç—å –¥–∞—Ç—É –∫–æ–Ω—Ü–∞ –∏–∑ start_date + DAYS_ACTIVE */}
                    –ó–∞–≤–µ—Ä—à–µ–Ω–∞ {getEndDateLabel(p.start_date, DAYS_ACTIVE)}
                  </div>
                </li>
              ))}
            </ul>
          )}
        </div>
      </div>

      {/* –ò–Ω—Ñ–æ–±–ª–æ–∫ */}
      <div className="mt-6 text-xs text-gray-400">
        <p>‚Ä¢ –ü–∞–Ω–µ–ª—å –∞–∫—Ç–∏–≤–Ω–∞ {DAYS_ACTIVE} –¥–Ω–µ–π. –ü–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—Å—è –≤ –ê—Ä—Ö–∏–≤.</p>
        <p>‚Ä¢ –° VIP (NFT –≤ –∫–æ—à–µ–ª—å–∫–µ) –≥–µ–Ω–µ—Ä–∞—Ü–∏—è ‚Äî {ENERGY_PER_DAY_VIP} –∫–í—Ç/—Å—É—Ç–∫–∏, –±–µ–∑ VIP ‚Äî {ENERGY_PER_DAY_BASE} –∫–í—Ç/—Å—É—Ç–∫–∏.</p>
        <p>‚Ä¢ –°—Ç–∞—Ç—É—Å VIP —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ —Å–æ–≥–ª–∞—Å–Ω–æ –Ω–∞–ª–∏—á–∏—é NFT –≤ –∫–æ—à–µ–ª—å–∫–µ –Ω–∞ –±—ç–∫–µ–Ω–¥–µ.</p>
        <p>‚Ä¢ –ü–æ–∫—É–ø–∫–∞ —Ç–æ–ª—å–∫–æ –∑–∞ EFHC. –ü–æ–∫—É–ø–∫–∞ EFHC –∑–∞ TON/USDT ‚Äî —á–µ—Ä–µ–∑ —Ä–∞–∑–¥–µ–ª Shop, –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ EFHC ‚Äî —á–µ—Ä–µ–∑ TON-–∫–æ—à–µ–ª—ë–∫ —Å memo (ID).</p>
      </div>
    </div>
  );
}

/**
 * getEndDateLabel ‚Äî –≤—ã—á–∏—Å–ª—è–µ—Ç –¥–∞—Ç—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–∞–Ω–µ–ª–∏: start_date + DAYS_ACTIVE
 * @param {string} startDateISO ‚Äî –¥–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD
 * @param {number} lifetimeDays ‚Äî —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ø–∞–Ω–µ–ª–∏ (–æ–±—ã—á–Ω–æ 180)
 * @returns {string} –º–µ—Ç–∫–∞ –¥–∞—Ç—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä "2025-12-31"
 */
function getEndDateLabel(startDateISO, lifetimeDays) {
  try {
    const d = new Date(startDateISO);
    if (isNaN(d.getTime())) return "-";
    const endMs = d.getTime() + lifetimeDays * 24 * 60 * 60 * 1000;
    const end = new Date(endMs);
    const y = end.getFullYear();
    const m = String(end.getMonth() + 1).padStart(2, "0");
    const day = String(end.getDate()).padStart(2, "0");
    return `${y}-${m}-${day}`;
  } catch {
    return "-";
  }
}

